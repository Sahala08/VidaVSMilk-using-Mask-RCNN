{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"MaskRCNN_200523","provenance":[],"authorship_tag":"ABX9TyPyCy+RtvZxGk3MBJAjfP/P"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"s_cZwT7shGvU","colab_type":"code","outputId":"4f117256-9833-43c7-dea4-cf2d4867132b","executionInfo":{"status":"ok","timestamp":1590742933728,"user_tz":-480,"elapsed":23284,"user":{"displayName":"an zheng","photoUrl":"","userId":"02767553862521185049"}},"colab":{"base_uri":"https://localhost:8080/","height":121}},"source":["from google.colab import drive\n","drive.mount('/content/drive/')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive/\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"bZkTIzTVhkNg","colab_type":"code","outputId":"501d0579-bfaf-4cce-d095-a7f1de765af3","executionInfo":{"status":"ok","timestamp":1590224219667,"user_tz":-480,"elapsed":4724,"user":{"displayName":"an zheng","photoUrl":"","userId":"02767553862521185049"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["!pip install pycocotools"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pycocotools in /usr/local/lib/python3.6/dist-packages (2.0.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"oh8ArtOmiJyr","colab_type":"code","colab":{}},"source":["!pip install tensorflow==1.9.0"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"5iQifb5niadV","colab_type":"code","colab":{}},"source":["!pip install keras==2.2.0"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"abxlEOYrio8h","colab_type":"code","colab":{}},"source":["import numpy\n","import scipy\n","import PIL\n","import tensorflow\n","import skimage\n","import h5py\n","import IPython\n","import cv2\n","import keras\n","import scipy\n","import matplotlib\n","import cython\n","\n","print(\"All dependencies are installed\")"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Win5GiLVizwz","colab_type":"code","colab":{}},"source":["import os\n","os.chdir(\"/content/drive/My Drive/git_source/Mask_RCNN/samples\")"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"irRGmVkfjKCJ","colab_type":"code","colab":{}},"source":["import sys\n","import random\n","import math\n","import numpy as np\n","import skimage.io\n","import matplotlib\n","import matplotlib.pyplot as plt\n","from pycocotools.coco import COCO\n","from mrcnn.config import Config\n","\n","#import tensorflow.compat.v1 as tf\n","#tf.disable_v2_behavior()\n","\n","# Root directory of the project\n","ROOT_DIR = os.path.abspath(\"../\")\n","\n","\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n","\n"," #Import Mask RCNN\n","sys.path.append(ROOT_DIR)  # To find local version of the library\n","from mrcnn import utils\n","import mrcnn.model as modellib\n","from mrcnn import visualize\n"," #Import COCO config\n","sys.path.append(os.path.join(ROOT_DIR, \"samples/coco/\"))  # To find local version\n","import coco\n","\n","\n","\n","%matplotlib inline"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"vRrUVkcbjZwZ","colab_type":"code","colab":{}},"source":["# Directory to save logs and trained model\n","MODEL_DIR = os.path.join(ROOT_DIR, \"logs\")\n","\n","# Local path to trained weights file\n","COCO_MODEL_PATH = os.path.join('', \"mask_rcnn_coco.h5\")\n","\n","# Download COCO trained weights from Releases if needed\n","if not os.path.exists(COCO_MODEL_PATH):\n","    utils.download_trained_weights(COCO_MODEL_PATH)\n","\n","# Directory of images to run detection on\n","IMAGE_DIR = os.path.join(ROOT_DIR, \"images\")"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"3K1i1Cs8j4JE","colab_type":"code","colab":{}},"source":["class InferenceConfig(coco.CocoConfig):\n","  #class InferenceConfig(coco.CocoConfig):\n","    # Set batch size to 1 since we'll be running inference on\n","    # one image at a time. Batch size = GPU_COUNT * IMAGES_PER_GPU\n","    GPU_COUNT = 1\n","    IMAGES_PER_GPU = 1\n","\n","config = InferenceConfig()\n","config.display()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Jil2uxyqj_T5","colab_type":"code","colab":{}},"source":["model = modellib.MaskRCNN(mode=\"inference\", config=config, model_dir=ROOT_DIR)\n","# Load weights trained on MS-COCO"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"2aq4zSGfkFxa","colab_type":"code","colab":{}},"source":["from keras.engine import topology\n","model.load_weights(COCO_MODEL_PATH, by_name=True)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gwFUJWdXw2LO","colab_type":"code","colab":{}},"source":["os.chdir(\"//usr/local/lib/python3.6/dist-packages/mrcnn/\")\n","!ls"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"s9D8Wc86poYj","colab_type":"code","colab":{}},"source":["import os\n","os.chdir(\"/content/drive/My Drive/git_source\")"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"cBk8K08JvKtP","colab_type":"code","outputId":"4c1b3489-7c2c-4351-a8f7-30afcbf3b404","executionInfo":{"status":"ok","timestamp":1590224019518,"user_tz":-480,"elapsed":8129,"user":{"displayName":"an zheng","photoUrl":"","userId":"02767553862521185049"}},"colab":{"base_uri":"https://localhost:8080/","height":941}},"source":["!python3 setup.py install"],"execution_count":0,"outputs":[{"output_type":"stream","text":["WARNING:root:Fail load requirements file, so using default ones.\n","running install\n","running bdist_egg\n","running egg_info\n","creating mask_rcnn.egg-info\n","writing mask_rcnn.egg-info/PKG-INFO\n","writing dependency_links to mask_rcnn.egg-info/dependency_links.txt\n","writing top-level names to mask_rcnn.egg-info/top_level.txt\n","writing manifest file 'mask_rcnn.egg-info/SOURCES.txt'\n","reading manifest template 'MANIFEST.in'\n","writing manifest file 'mask_rcnn.egg-info/SOURCES.txt'\n","installing library code to build/bdist.linux-x86_64/egg\n","running install_lib\n","running build_py\n","creating build\n","creating build/lib\n","creating build/lib/mrcnn\n","copying mrcnn/__init__.py -> build/lib/mrcnn\n","copying mrcnn/config.py -> build/lib/mrcnn\n","copying mrcnn/model.py -> build/lib/mrcnn\n","copying mrcnn/parallel_model.py -> build/lib/mrcnn\n","copying mrcnn/utils.py -> build/lib/mrcnn\n","copying mrcnn/visualize.py -> build/lib/mrcnn\n","creating build/bdist.linux-x86_64\n","creating build/bdist.linux-x86_64/egg\n","creating build/bdist.linux-x86_64/egg/mrcnn\n","copying build/lib/mrcnn/__init__.py -> build/bdist.linux-x86_64/egg/mrcnn\n","copying build/lib/mrcnn/config.py -> build/bdist.linux-x86_64/egg/mrcnn\n","copying build/lib/mrcnn/model.py -> build/bdist.linux-x86_64/egg/mrcnn\n","copying build/lib/mrcnn/parallel_model.py -> build/bdist.linux-x86_64/egg/mrcnn\n","copying build/lib/mrcnn/utils.py -> build/bdist.linux-x86_64/egg/mrcnn\n","copying build/lib/mrcnn/visualize.py -> build/bdist.linux-x86_64/egg/mrcnn\n","byte-compiling build/bdist.linux-x86_64/egg/mrcnn/__init__.py to __init__.cpython-36.pyc\n","byte-compiling build/bdist.linux-x86_64/egg/mrcnn/config.py to config.cpython-36.pyc\n","byte-compiling build/bdist.linux-x86_64/egg/mrcnn/model.py to model.cpython-36.pyc\n","byte-compiling build/bdist.linux-x86_64/egg/mrcnn/parallel_model.py to parallel_model.cpython-36.pyc\n","byte-compiling build/bdist.linux-x86_64/egg/mrcnn/utils.py to utils.cpython-36.pyc\n","byte-compiling build/bdist.linux-x86_64/egg/mrcnn/visualize.py to visualize.cpython-36.pyc\n","creating build/bdist.linux-x86_64/egg/EGG-INFO\n","copying mask_rcnn.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO\n","copying mask_rcnn.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n","copying mask_rcnn.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n","copying mask_rcnn.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n","zip_safe flag not set; analyzing archive contents...\n","creating dist\n","creating 'dist/mask_rcnn-2.1-py3.6.egg' and adding 'build/bdist.linux-x86_64/egg' to it\n","removing 'build/bdist.linux-x86_64/egg' (and everything under it)\n","Processing mask_rcnn-2.1-py3.6.egg\n","Removing /usr/local/lib/python3.6/dist-packages/mask_rcnn-2.1-py3.6.egg\n","Copying mask_rcnn-2.1-py3.6.egg to /usr/local/lib/python3.6/dist-packages\n","mask-rcnn 2.1 is already the active version in easy-install.pth\n","\n","Installed /usr/local/lib/python3.6/dist-packages/mask_rcnn-2.1-py3.6.egg\n","Processing dependencies for mask-rcnn==2.1\n","Finished processing dependencies for mask-rcnn==2.1\n"],"name":"stdout"}]}]}